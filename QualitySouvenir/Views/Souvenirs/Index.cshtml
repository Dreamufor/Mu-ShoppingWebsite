@*@model IEnumerable<QualitySouvenir.Models.Souvenir>*@
@model PaginatedList<QualitySouvenir.Models.Souvenir>

@{
    ViewData["Title"] = "Souvenir";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <h2 class="text-center text-dark">Product List</h2>
            <p class="text-right">
                <a asp-action="Create" class="btn btn-outline-secondary">Create New</a>
            </p>
            <form asp-action="Index" method="get">
                <div class="input-group float-right mb-2" style="width:400px;">
                    <input type="text" class="form-control" placeholder="Search products" name="searchString"
                           value="@ViewData["CurrentFilter"]">
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit" value="Search"><i class="fas fa-search"></i></button>
                    </div>
                    <a asp-action="Index" class="alert-light font-weight-bold ml-3 mt-1">Back to Full List</a>
                </div>
            </form>

            <table class="table">
                <thead>
                    <tr class="alert-light">
                        <th>
                            Image
                        </th>

                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]" class="alert-link">
                                Name
                                <i class="fas fa-sort"></i>
                            </a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]" class="alert-link">
                                Price
                                <i class="fas fa-sort"></i>
                            </a>
                        </th>
                        <th style="width:300px;">
                            Description
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]" class="alert-link">
                                Category
                                <i class="fas fa-sort"></i>
                            </a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["SupplierSortParm"]"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]" class="alert-link">
                                Supplier
                                <i class="fas fa-sort"></i>
                            </a>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var imgUrl = @Href("~"+item.Image);
                        var errImg = @Href("~/images/main/showcase.jpg");
                    <tr>
                        <td>
                            <img style="width: 200px; height: auto;" src="@imgUrl" alt="Souvenir Image" onerror="this.onerror = null; this.src = '@errImg'">
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            NZD$ @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Supplier.Name)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-primary">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-info">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-danger">Delete</a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            <div class="text-center">
                @*previous and next*@
                @{
                    var preVDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }
                <a asp-action="Index"
                   asp-route-sortOrder ="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.PageIndex -1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="mr-3 btn btn-outline-secondary @preVDisabled" style="width:100px;">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder ="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="ml-3 btn btn-outline-secondary @nextDisabled" style="width:100px;">
                    Next
                </a>
            </div>

        </div>
        <div class="col-md-1"></div>
    </div>
</div>